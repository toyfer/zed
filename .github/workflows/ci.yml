# .github/workflows/release.yml
name: Zed Windows Release

on:
  push:
    tags:
      - "v*.*.*"          # v1.0.0 などのタグで起動
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  BIN_NAME: zed.exe       # 実際の実行ファイル名に合わせて変更

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.set-output.outputs.artifact }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 長いパス対策
      - name: Enable long paths
        shell: pwsh
        run: |
          git config --system core.longpaths true
          Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
                           -Name "LongPathsEnabled" -Value 1 -Type DWord

      # Rust stable + コンポーネント
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      # CMake 必須
      - name: Install CMake
        uses: lukka/get-cmake@latest

      # ビルド
      - name: Build (release)
        shell: pwsh
        run: cargo build --release --workspace --verbose

      # ZIP 作成
      - name: Package binary
        shell: pwsh
        run: |
          $out="zed-${{ github.ref_name }}-windows-x86_64"
          mkdir $out
          Copy-Item "target/release/${env:BIN_NAME}" $out/
          Compress-Archive -Path $out -DestinationPath "$out.zip"
          echo "::set-output name=artifact::$out.zip"
        id: set-output

      # アップロード (後続ジョブでダウンロードして Release に添付)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-output.outputs.artifact }}
          path: ${{ steps.set-output.outputs.artifact }}

  github-release:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write   # Release 作成・ファイル添付に必要
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-windows.outputs.artifact-name }}

      # Release 作成＋アセット添付
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Zed ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ${{ needs.build-windows.outputs.artifact-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}